{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/icarus/source/css/back-to-top.css","path":"css/back-to-top.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/insight.css","path":"css/insight.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/progressbar.css","path":"css/progressbar.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/search.css","path":"css/search.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/favicon.svg","path":"images/favicon.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/thumbnail.svg","path":"images/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/og_image.png","path":"images/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back-to-top.js","path":"js/back-to-top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/gallery/thumbnails/DefensiveProgramming.jpg","path":"gallery/thumbnails/DefensiveProgramming.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/images/logo1.svg","path":"images/logo1.svg","modified":0,"renderable":1},{"_id":"source/gallery/thumbnails/java-streams.jpg","path":"gallery/thumbnails/java-streams.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1577500455306},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1577500455307},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1577500455307},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1577500455307},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1577500455307},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1577500455312},{"_id":"source/_posts/hello-world.md","hash":"d6be78dfa35b21b4d5a357b40159a4389c1430d9","modified":1578473071196},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1577500455307},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1577500455307},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1577500455307},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1577500455307},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1577500455308},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1577500455308},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1577500455308},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1577500455308},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1577500455308},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1577500455308},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1577500455308},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1577500455308},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1577500455311},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1577500455311},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1577500455311},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1577500455312},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1577500455312},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1577500455312},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1577500455312},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1577500455313},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1577500455309},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1577500455310},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1577500455311},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1577500455311},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1577500455311},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1577500455311},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1577500455311},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1577500455313},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1577500455315},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1577500455321},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1577500455321},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1577500455321},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1577500455321},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1577500455321},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1577500455323},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1577500455324},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1577500455324},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1577500455324},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1577500455310},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1577500455310},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1577500455313},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1577500455313},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1577500455314},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1577500455315},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1577500455315},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1577500455315},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1577500455315},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1577500455316},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1577500455317},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1577500455319},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1577500455322},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1577500455323},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1577500455323},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1577500455319},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1577500455318},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1577500455320},{"_id":"themes/gandalfr/.gitignore","hash":"def5f0c9ac6f013028d5b4e9938cbd679cb1c4bf","modified":1577762753528},{"_id":"themes/gandalfr/LICENSE","hash":"e80157fea03e4ee45500ea818fceaf6ca388c17d","modified":1577762753528},{"_id":"themes/gandalfr/README.md","hash":"b60c04f45cebaef0c8cf721aa88c662aaf051c9f","modified":1577762753528},{"_id":"themes/gandalfr/TODO.md","hash":"c20ea4cb6aec891d53fc60707f6102e049e7955c","modified":1577762753529},{"_id":"themes/gandalfr/_config.yml","hash":"b651f982ee554ef597451e07e6f8c86048d0cade","modified":1577762785143},{"_id":"themes/gandalfr/_config.yml.example","hash":"b651f982ee554ef597451e07e6f8c86048d0cade","modified":1577762753529},{"_id":"themes/gandalfr/gulpfile.js","hash":"cb1123f7f21b8d37a651599f2f40b7bc4d11963b","modified":1577762753529},{"_id":"themes/gandalfr/package.json","hash":"cc67f61b1a8c216952e48d6ab081b80e6f399516","modified":1577762753534},{"_id":"themes/gandalfr/languages/en.yml","hash":"40292f2a48e4e6361132033a47c516cb33127b6c","modified":1577762753529},{"_id":"themes/gandalfr/languages/zh-cn.yml","hash":"9e4b03e14c094000257ea254fd660dde4c7af63c","modified":1577762753529},{"_id":"themes/gandalfr/layout/archive.jade","hash":"080d5a393f086b18f279a6b32ad161d441a7edf3","modified":1577762753530},{"_id":"themes/gandalfr/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1577762753530},{"_id":"themes/gandalfr/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1577762753532},{"_id":"themes/gandalfr/package-lock.json","hash":"4822e32d22c6d5ab2717eac3fd7019bd7a69fa0c","modified":1577762753533},{"_id":"themes/gandalfr/source/favicon.ico","hash":"ff97e9eeb291dcd407982d438f482280aa25a6d9","modified":1577762753535},{"_id":"themes/gandalfr/layout/mixins/paginator.jade","hash":"7451a25545dfcc64cc5f2c8bf0c817fde41770e3","modified":1577762753530},{"_id":"themes/gandalfr/layout/mixins/post.jade","hash":"4475dd99479cb6c2a122b0fe353e451e4a056575","modified":1577762753530},{"_id":"themes/gandalfr/layout/partial/comment.jade","hash":"0496d9e93fc9ab7889f086f80916d7220ed19694","modified":1577762753531},{"_id":"themes/gandalfr/layout/partial/copyright.jade","hash":"3f2a357c9d4861386f81d97a97cde9b6817e35cc","modified":1577762753531},{"_id":"themes/gandalfr/layout/partial/head.jade","hash":"d32a970c293bd0297ecf326b213871021e2565a5","modified":1577762753531},{"_id":"themes/gandalfr/layout/partial/layout.jade","hash":"d28fa3c39fca9624a87e7e83736cf2509dc14a43","modified":1577762753531},{"_id":"themes/gandalfr/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1577762753531},{"_id":"themes/gandalfr/layout/partial/scripts.jade","hash":"90b7952204f660b065a3e3edb81424253166aecd","modified":1577762753532},{"_id":"themes/gandalfr/source/css/gandalfr.css","hash":"1fdfe637e7916bdae433f5738a7e4ece3573f08d","modified":1577762753534},{"_id":"themes/gandalfr/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1577762753535},{"_id":"themes/gandalfr/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1577762753536},{"_id":"themes/gandalfr/source/scss/gandalfr.scss","hash":"eb7e4dd5949defa1795b90d8ff5e09f553cea53d","modified":1577762753538},{"_id":"themes/gandalfr/source/scss/_partial/archive-post-list.scss","hash":"b173328f07795f64769fe552b5c2749f4159d050","modified":1577762753536},{"_id":"themes/gandalfr/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1577762753536},{"_id":"themes/gandalfr/source/scss/_partial/base.scss","hash":"a9a624a14d593ec986cc5d7eada07394f57be41d","modified":1577762753536},{"_id":"themes/gandalfr/source/scss/_partial/footer.scss","hash":"e331ac53e339eea7e09fc7ef8072bf36db682a9e","modified":1577762753537},{"_id":"themes/gandalfr/source/scss/_partial/header.scss","hash":"0491d194e0f3bd927869f0a6b190624d5ff16c92","modified":1577762753537},{"_id":"themes/gandalfr/source/scss/_partial/mq.scss","hash":"826ad88815e2ae0d4e92f9ddb35e2a6f5cc6836d","modified":1577762753537},{"_id":"themes/gandalfr/source/scss/_partial/home-post-list.scss","hash":"0021e88b04c51aca45627272bc7e3584ba2480b9","modified":1577762753537},{"_id":"themes/gandalfr/source/scss/_partial/post.scss","hash":"69da5e30b1634d2b9647ffafe521aaa26778ca54","modified":1577762753538},{"_id":"themes/gandalfr/source/scss/_partial/normalize.scss","hash":"c6fdc91342b36e04d97a17a3d71610cf46de0aca","modified":1577762753537},{"_id":"themes/Daily/README.md","hash":"39d95384ca7e54cc1d107afea892852e346d140b","modified":1577772112913},{"_id":"themes/Daily/_config.yml","hash":"181cbe1cd374f77ded1ff0bccd1664f23e0611ff","modified":1577772112913},{"_id":"themes/Daily/languages/default.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1577772112914},{"_id":"themes/Daily/languages/en.yml","hash":"2df42359e6646c0c2903ada8411100a8f1d15134","modified":1577772112914},{"_id":"themes/Daily/languages/zh-TW.yml","hash":"c727b3550a12ad6f99b13e1b320466f8238f4b54","modified":1577772112914},{"_id":"themes/Daily/languages/zh-CN.yml","hash":"3e28e97eaf0e172ddee96b2d6f8ba604d90ff24d","modified":1577772112914},{"_id":"themes/Daily/layout/archive.ejs","hash":"5afa6387ae87e15a4562822850806c51f471cbe8","modified":1577772112918},{"_id":"themes/Daily/layout/layout.ejs","hash":"cbdce5eecad781dd0cb8e0c6788a9bf5e9359800","modified":1577772112918},{"_id":"themes/Daily/layout/index.ejs","hash":"3317310e01719dd58878fb4b7bd1b41d495800af","modified":1577772112918},{"_id":"themes/Daily/layout/post.ejs","hash":"be2fe9171f1c8f15447b8fe6e69a82cd40a4dead","modified":1577772112919},{"_id":"themes/Daily/layout/tag.ejs","hash":"f13f991cdd2d462cfaff2ead0a110504e10d1d2f","modified":1577772112919},{"_id":"themes/Daily/layout/_partial/after-footer.ejs","hash":"00588b4db6aeec2d1f7951ee96980764a15e7f4f","modified":1577772112915},{"_id":"themes/Daily/layout/_partial/article-archive.ejs","hash":"32e6d38ac9074922f958126da4eb5cde0ae98da4","modified":1577772112915},{"_id":"themes/Daily/layout/_partial/comment.ejs","hash":"9c8975d87fe1a1aad63cd74affa68f42ec3334e1","modified":1577772112916},{"_id":"themes/Daily/layout/_partial/article-index.ejs","hash":"712c3930f7c5ebb433afedfcd6098d67e28da380","modified":1577772112916},{"_id":"themes/Daily/layout/_partial/head.ejs","hash":"9338cdc926aae79a50733e014e82471202b8fa07","modified":1577772112917},{"_id":"themes/Daily/layout/_partial/footer.ejs","hash":"5f190a7233be1322e744fecd2759b8e8f7042be5","modified":1577772112916},{"_id":"themes/Daily/layout/_partial/nav.ejs","hash":"cb5cb6371ad98a3fafb9d138a4f05b0b13a83edc","modified":1577772112917},{"_id":"themes/Daily/layout/_partial/pagination.ejs","hash":"98af75b95859dc6aae946497f27d7e51f753e5f6","modified":1577772112917},{"_id":"themes/Daily/source/css/_archive.scss","hash":"698f914f037079d1a25b9d86923eac4775b2ec7a","modified":1577772112921},{"_id":"themes/Daily/source/css/_highlight.scss","hash":"7d0bb75b74bea68dc04fa0346949d8f17fd28a0b","modified":1577772112923},{"_id":"themes/Daily/source/css/_daily.scss","hash":"e4261421d6c6af5b20c8e2b36353ea95cadb4eef","modified":1577772112923},{"_id":"themes/Daily/source/css/_comment.scss","hash":"8f92712c08489332c824d13e9e3d11bd2a0f1fd0","modified":1577772112922},{"_id":"themes/Daily/source/css/_mobile.scss","hash":"2b7297a4539e6ae803fe459ef411aa4149b24fcf","modified":1577772112924},{"_id":"themes/Daily/source/css/_nav.scss","hash":"eebe106b0360ea5d6735c59b524338faf0937d45","modified":1577772112925},{"_id":"themes/Daily/source/css/_normalize.scss","hash":"59fff706bed3120e3d9d6d0092a0372c172ee537","modified":1577772112925},{"_id":"themes/Daily/source/css/style.scss","hash":"163cde007c7fb3debf9f53594c72d6536242f688","modified":1577772112927},{"_id":"themes/Daily/source/images/arrow-right.svg","hash":"98c04bf1be3ca657f1e9697dc63219ade0a5616c","modified":1577772112929},{"_id":"themes/Daily/source/css/_post.scss","hash":"d674fd9312c33f98177ba8f7e144b2a663c60fd9","modified":1577772112926},{"_id":"themes/Daily/source/css/_variables.scss","hash":"508a896974912ccfdc4b14397df9fa4924d31dbf","modified":1577772112926},{"_id":"themes/Daily/source/images/arrow-left.svg","hash":"4230dcb796a40d7a0f54c68e1ffb1f325ad962a5","modified":1577772112928},{"_id":"themes/Daily/source/images/github.svg","hash":"bc2e3f2e54c354acfe64899482f6379d25f04792","modified":1577772112929},{"_id":"themes/Daily/source/images/mail.svg","hash":"18b3549b0447d605ca252fefcaa4d8e11179ce21","modified":1577772112930},{"_id":"themes/Daily/source/images/twitter.svg","hash":"2bef6c843de0113721c6c5d1676385897a22a446","modified":1577772112930},{"_id":"themes/Daily/source/images/menu.svg","hash":"a1837ac76bc3e2aaf30450941bfefcb29ba16411","modified":1577772112930},{"_id":"themes/Daily/source/images/weibo.svg","hash":"ffd43d8ae9f9ec4f5ae8b97cafa9023ac2a4e59b","modified":1577772112931},{"_id":"themes/Daily/source/js/app.js","hash":"b74710d1dd7b7d1407b4fcfc9499bc37de69b21e","modified":1577772112932},{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1577772530976},{"_id":"themes/icarus/LICENSE","hash":"41f72cd544612bc4589c924c776422b800a4eff7","modified":1577772530976},{"_id":"themes/icarus/README.md","hash":"c351bc76d3b4a138989c50f57bd3c52fa95eaa56","modified":1577772530977},{"_id":"themes/icarus/_config.yml","hash":"70d4b4dd2c471c571e077854304d816998fdff01","modified":1583681893243},{"_id":"themes/icarus/package.json","hash":"4f362aa241ad5d5d9422cc8f1e825edfcd8cbb1a","modified":1577772531028},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"6b17b84116938367757928087a09dcb8489d06f6","modified":1577772530975},{"_id":"themes/icarus/languages/es.yml","hash":"2e59e579d393c881dcbb885516d93eeaf469cec2","modified":1577772530989},{"_id":"themes/icarus/languages/fr.yml","hash":"0017f93a5d491a9c0e55911cdc35316762c5a94e","modified":1577772530989},{"_id":"themes/icarus/languages/en.yml","hash":"66d873bbe04894610c2d28b0d03e10143997b51b","modified":1577772530989},{"_id":"themes/icarus/languages/id.yml","hash":"92d2d19a62a17b6e99f82a014309bbf6c13c9ae8","modified":1577772530989},{"_id":"themes/icarus/languages/ja.yml","hash":"6eed7771de2353d71b720c6e605cceb3f230b12e","modified":1577772530990},{"_id":"themes/icarus/languages/pl.yml","hash":"43f5447c38c9be2e1f5ce6181a0f97eeb437b059","modified":1577772530990},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"bcf5bc81ca855d26bbc3b3bfabc7d84429e74b85","modified":1577772530990},{"_id":"themes/icarus/languages/ko.yml","hash":"e7ac736b604429adedd67f3ca6043201eff7b23b","modified":1577772530990},{"_id":"themes/icarus/languages/ru.yml","hash":"ba8b4f7d77eb1d1e28aa1f9107bd0bbbdc4cba99","modified":1577772530991},{"_id":"themes/icarus/languages/tr.yml","hash":"eff1c0b3d5c4b328f6dd74a195ff378c898f4d29","modified":1577772530991},{"_id":"themes/icarus/languages/vn.yml","hash":"6d9f4fabca711a6cb0a0efd72aa75c3641beb4a6","modified":1577772530991},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"804f6a1edee49bb6a5ecb8e9d14d3e93eaca37c0","modified":1577772530992},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"6ff978a0c4c11e996925e1a912a1d805f4680a6c","modified":1577772530992},{"_id":"themes/icarus/scripts/index.js","hash":"40839db58041e31eb06d428a91869b0789277e7e","modified":1577772531029},{"_id":"themes/icarus/layout/categories.ejs","hash":"29d304f2b95a04fbc5e7529f9bdce9648e3545ef","modified":1577772530994},{"_id":"themes/icarus/layout/archive.ejs","hash":"2527527eaf3e757ab476325f691d2e2e0ff9c2d5","modified":1577772530993},{"_id":"themes/icarus/layout/category.ejs","hash":"58aa84f75193b978b2072f29dbb84ed8279574b9","modified":1577772530995},{"_id":"themes/icarus/layout/index.ejs","hash":"8ab440868f721bb7256ab9f2be96996850b0cf44","modified":1577772531008},{"_id":"themes/icarus/layout/layout.ejs","hash":"ea357efa47d579e22adcfd88c64802c4ac20a623","modified":1583589713423},{"_id":"themes/icarus/layout/page.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1577772531009},{"_id":"themes/icarus/layout/tag.ejs","hash":"45eb077f2ac86f5c8090cb1a2361eed56a368e95","modified":1577772531022},{"_id":"themes/icarus/layout/post.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1577772531017},{"_id":"themes/icarus/layout/tags.ejs","hash":"0c527c6b72386f11c18e8aa5249be8c601e69906","modified":1577772531022},{"_id":"themes/icarus/layout/common/article.locals.js","hash":"1f108fa96e61a681d7b1ee390b4f0ff60d042720","modified":1577772531003},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"d70962fd1c8123c5314d73cf0aec08ffb96aeca5","modified":1577772531003},{"_id":"themes/icarus/layout/common/footer.locals.js","hash":"504ed92dc76723f19777463d690acfbe1d89e2ba","modified":1577772531003},{"_id":"themes/icarus/layout/common/article.ejs","hash":"d2362964b2d9427067e1d7dfe100220b380b2f70","modified":1577772531002},{"_id":"themes/icarus/layout/common/head.ejs","hash":"0998072c9ece90e26339f2503633c4ca08da62e9","modified":1577772531004},{"_id":"themes/icarus/layout/common/navbar.ejs","hash":"0fe0c940fcb112828d465830713a0cdd42864951","modified":1577772531004},{"_id":"themes/icarus/layout/common/navbar.locals.js","hash":"7e523ba80667038f2e58cf4f9cb073e9afbc70e6","modified":1577772531004},{"_id":"themes/icarus/layout/common/paginator.ejs","hash":"7837d80b27f166161b3deeffb571680025c7d723","modified":1577772531005},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"99da87756d2bd234b058e90d2c6dabc1bc10f20e","modified":1577772531005},{"_id":"themes/icarus/layout/common/widget.ejs","hash":"6c15ede76e1d2f348c55d19ac079d245d5e5c0cd","modified":1583640495581},{"_id":"themes/icarus/layout/donate/alipay.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531006},{"_id":"themes/icarus/layout/donate/alipay.ejs","hash":"3290058879973e403a05472a0fe2ac0219d5b961","modified":1577772531006},{"_id":"themes/icarus/layout/donate/patreon.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531006},{"_id":"themes/icarus/layout/donate/patreon.ejs","hash":"fc19da9674649c035d133535078ff7e37d0f54c1","modified":1577772531006},{"_id":"themes/icarus/layout/donate/paypal.ejs","hash":"dbb90fa9214d659ea6bbd5a92ea00888adf3761e","modified":1577772531007},{"_id":"themes/icarus/layout/donate/wechat.ejs","hash":"051b873e1fc28c1d7c2d6443991b6a2f43813e6b","modified":1577772531007},{"_id":"themes/icarus/layout/donate/paypal.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531007},{"_id":"themes/icarus/layout/donate/wechat.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531008},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"73038ac4fdfdfa71d92edaa98cc194b3446586a3","modified":1577772530996},{"_id":"themes/icarus/layout/comment/changyan.locals.js","hash":"49bce2ee742c7224bda97092d6e0a1a09184ef34","modified":1577772530996},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"7a8c656c8651d48e21ed24c469ea75898b2b12df","modified":1577772530997},{"_id":"themes/icarus/layout/comment/disqus.locals.js","hash":"a8d2cecaa82ec9e2e2e61cb73417d63d115335d6","modified":1577772530997},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"1c3751f36f737527e352c65bb1ca7172ff792979","modified":1577772530998},{"_id":"themes/icarus/layout/comment/facebook.locals.js","hash":"77e3ef1d933660d980b26d15968aa1a5c8a93a56","modified":1577772530998},{"_id":"themes/icarus/layout/comment/gitalk.ejs","hash":"eb1314badf793924b5786e92f8b3ebb0f21f3b58","modified":1577772530999},{"_id":"themes/icarus/layout/comment/gitalk.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1577772531000},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"d5e1a396e23df4e75e139d12846290bdb08ba01e","modified":1577772531000},{"_id":"themes/icarus/layout/comment/gitment.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1577772531000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1577772531000},{"_id":"themes/icarus/layout/comment/isso.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531001},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1577772531001},{"_id":"themes/icarus/layout/comment/livere.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531001},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"31471cd05018583249b4c09a78cf1d02e7987244","modified":1577772531002},{"_id":"themes/icarus/layout/comment/valine.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531002},{"_id":"themes/icarus/layout/plugin/animejs.ejs","hash":"c17ea2cfe5cb239342166e2ba72cbfc663c8160f","modified":1577772531010},{"_id":"themes/icarus/layout/plugin/animejs.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1577772531010},{"_id":"themes/icarus/layout/plugin/back-to-top.ejs","hash":"5936b5fd2f2444605a21c6c422623f07f02d5c9a","modified":1577772531011},{"_id":"themes/icarus/layout/plugin/back-to-top.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1577772531011},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"7dbbea5722277e00a624c1796ec83d5f9c12d059","modified":1577772531011},{"_id":"themes/icarus/layout/plugin/busuanzi.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1577772531012},{"_id":"themes/icarus/layout/plugin/busuanzi.ejs","hash":"4285b0ae608c7c54e4ecbebb6d22d4cd1be28f70","modified":1577772531012},{"_id":"themes/icarus/layout/plugin/baidu-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1577772531012},{"_id":"themes/icarus/layout/plugin/gallery.ejs","hash":"7d19b7a5713d08a614578f079f1327a651c472ae","modified":1577772531013},{"_id":"themes/icarus/layout/plugin/gallery.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1577772531014},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"13b298b0026bfc7bcb6a47b6c795fe15cc4584fc","modified":1577772531014},{"_id":"themes/icarus/layout/plugin/google-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1577772531015},{"_id":"themes/icarus/layout/plugin/hotjar.ejs","hash":"6df0d8f77ed39e4d32c78177844115e31bf3a776","modified":1577772531015},{"_id":"themes/icarus/layout/plugin/hotjar.locals.js","hash":"9258fc2af057d2545a43fae54790743b63450378","modified":1577772531016},{"_id":"themes/icarus/layout/plugin/mathjax.ejs","hash":"dddb6f37487286fe2080118bcbb4a8d82dc84d5e","modified":1577772531016},{"_id":"themes/icarus/layout/plugin/mathjax.locals.js","hash":"7faa26fa6da6a93dc3f7fdcf5a784d1f8825b031","modified":1577772531016},{"_id":"themes/icarus/layout/plugin/outdated-browser.ejs","hash":"1437d1ac085a8110e61317254f6c0a034121bc39","modified":1577772531016},{"_id":"themes/icarus/layout/plugin/progressbar.ejs","hash":"34423f74787cc9d67b2598dd69b07c84d5bf2280","modified":1577772531017},{"_id":"themes/icarus/layout/plugin/outdated-browser.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1577772531017},{"_id":"themes/icarus/layout/plugin/progressbar.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1577772531017},{"_id":"themes/icarus/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1577772531019},{"_id":"themes/icarus/layout/share/addthis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531020},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"95d3bc1a841bd934b1ae9209ad1af74e743ecb10","modified":1577772531020},{"_id":"themes/icarus/layout/share/addtoany.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531020},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"f14c8084b7ee16a091f0bd2ae9039e3bfff7e7b7","modified":1577772531020},{"_id":"themes/icarus/layout/share/bdshare.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531021},{"_id":"themes/icarus/layout/share/sharejs.ejs","hash":"65d08316cc479910ea4f526cd1c299d0104daf7f","modified":1577772531021},{"_id":"themes/icarus/layout/share/sharejs.locals.js","hash":"11976fd4cfed1044be29b476b34c33175c9b4308","modified":1577772531021},{"_id":"themes/icarus/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1577772531021},{"_id":"themes/icarus/layout/share/sharethis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531021},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"850aa91778100d693a52b10eaa8586c8e3215ee6","modified":1577772531018},{"_id":"themes/icarus/layout/search/baidu.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531018},{"_id":"themes/icarus/layout/search/google-cse.ejs","hash":"4b881a99325a6a0cebf97ac53e09d8fc67f87d29","modified":1577772531018},{"_id":"themes/icarus/layout/search/google-cse.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531018},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"9a27db2a007582ceee7ca4b1eebddbd456893568","modified":1577772531018},{"_id":"themes/icarus/layout/search/insight.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531019},{"_id":"themes/icarus/source/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1577772531029},{"_id":"themes/icarus/source/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1577772531030},{"_id":"themes/icarus/source/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1577772531030},{"_id":"themes/icarus/source/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1577772531030},{"_id":"themes/icarus/source/css/style.styl","hash":"514ffac648175c9250b12e2089ae2da7a80d7dea","modified":1583684389487},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"eb738a2ac2935ce7a542964d90088613b281dd15","modified":1577772531022},{"_id":"themes/icarus/layout/widget/archive.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531022},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"17e58e537645c4434a1140377ae3e7f43cca4927","modified":1577772531023},{"_id":"themes/icarus/layout/widget/category.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531023},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"bb6510193632413e83227bdffad7c3b37629dcde","modified":1577772531023},{"_id":"themes/icarus/layout/widget/links.locals.js","hash":"872cf1a18e152361f5739c6d5fecc0bf46d59513","modified":1577772531023},{"_id":"themes/icarus/layout/widget/profile.ejs","hash":"b9845e0b16bc99feb376ff21f91cf6503403618b","modified":1583601913377},{"_id":"themes/icarus/layout/widget/profile.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1577772531024},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"14a2f4587831e017b93818c06dbe18a7e8a27c1e","modified":1577772531024},{"_id":"themes/icarus/layout/widget/recent_posts.locals.js","hash":"5065aca74ec2c98ec88994636fee8408f769c5f2","modified":1577772531024},{"_id":"themes/icarus/layout/widget/subscribe_email.ejs","hash":"391622e9c1d17bf79180faa617ed8c1ee1871a87","modified":1577772531024},{"_id":"themes/icarus/layout/widget/subscribe_email.locals.js","hash":"aae87fbdb7a1245a0fc0637225a935fc39836916","modified":1577772531025},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"e41aff420cc4ea1c454de49bd8af0e7a93f3db3f","modified":1577772531025},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"26fa17afaf0cb345a213816c44c39575a66759ba","modified":1577772531026},{"_id":"themes/icarus/layout/widget/tagcloud.locals.js","hash":"093f59d2f43e7ffa47bee79da15f98705300dfba","modified":1577772531026},{"_id":"themes/icarus/layout/widget/toc.ejs","hash":"e800b4b38eab716882389a09527e9f59a189dea6","modified":1577772531027},{"_id":"themes/icarus/layout/widget/toc.locals.js","hash":"e730a7fff2717f17741540e5ed77b89e289fdeab","modified":1577772531027},{"_id":"themes/icarus/source/images/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1577772531031},{"_id":"themes/icarus/source/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1577772531031},{"_id":"themes/icarus/source/images/logo.svg","hash":"10e8b84bcc4acd567e11a3913a0c45a886851b18","modified":1583563304042},{"_id":"themes/icarus/source/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1577772531033},{"_id":"themes/icarus/source/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1577772531034},{"_id":"themes/icarus/source/images/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1577772531033},{"_id":"themes/icarus/source/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1577772531034},{"_id":"themes/icarus/includes/common/ConfigGenerator.js","hash":"451397efc7808787419fa3eb6b043c0bd8bbdf30","modified":1577772530979},{"_id":"themes/icarus/source/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1577772531035},{"_id":"themes/icarus/includes/common/ConfigValidator.js","hash":"48cff5402e93b11d5266370e9c4b78ee21369cb9","modified":1577772530979},{"_id":"themes/icarus/includes/common/utils.js","hash":"c0aeaeb57a42bcc71a92da2249762f91abd83ffe","modified":1577772530979},{"_id":"themes/icarus/includes/generators/categories.js","hash":"7cb370ac53a05d6b1b9203579716c0ca83d35c36","modified":1577772530980},{"_id":"themes/icarus/includes/generators/category.js","hash":"313e170e55d74526c4e1be7181ef7a21439147c9","modified":1577772530980},{"_id":"themes/icarus/includes/generators/insight.js","hash":"c4b981443927b87cc14a3a583029e13f819d6d71","modified":1577772530981},{"_id":"themes/icarus/includes/generators/tags.js","hash":"8195322c208706427a1cf56361669dca4d86f6f1","modified":1577772530981},{"_id":"themes/icarus/includes/helpers/cdn.js","hash":"7d34ea6400cb3611c374c135304abcb65ef291b7","modified":1577772530981},{"_id":"themes/icarus/includes/helpers/config.js","hash":"173e02987e7a7d5df1e686f6ee4edd8cf494bdd3","modified":1577772530982},{"_id":"themes/icarus/source/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1577772531035},{"_id":"themes/icarus/includes/helpers/layout.js","hash":"d96130e64b7ea71add033199d0d11ee28cf66115","modified":1583589657492},{"_id":"themes/icarus/source/js/main.js","hash":"9d58a64d1168ef3ab7f498f2e8b4f53fb23db462","modified":1577772531036},{"_id":"themes/icarus/includes/helpers/override.js","hash":"223771860caddffcbce7d84dfb07798f6aa0bdda","modified":1577772530982},{"_id":"themes/icarus/includes/helpers/page.js","hash":"4ce98c781bcbc132672e6d16bf02df5bebcea7b3","modified":1577772530982},{"_id":"themes/icarus/includes/helpers/site.js","hash":"2f55818448fe83c73418dcf9751745c7918c10e3","modified":1577772530983},{"_id":"themes/icarus/includes/specs/article.spec.js","hash":"ce24279cd0cd39855216dab0cd5223c755757cdf","modified":1577772530983},{"_id":"themes/icarus/includes/specs/comment.spec.js","hash":"b0ef033e363b918134fb5a003143e9bd8fafa300","modified":1577772530984},{"_id":"themes/icarus/includes/specs/config.spec.js","hash":"7a9bac384a73cf9f39173fdb2dfc2813784d8891","modified":1577772530984},{"_id":"themes/icarus/includes/specs/donate.spec.js","hash":"722cb2662569957e8b1d1a467d9632b8cc6e69d6","modified":1577772530984},{"_id":"themes/icarus/includes/specs/footer.spec.js","hash":"8e6d7c5f9a13ce03241b6562259d210b389cb88e","modified":1577772530985},{"_id":"themes/icarus/includes/specs/icon_link.spec.js","hash":"f2a83ac5ccb74fc6f3dfbd25430e142297d8491c","modified":1577772530985},{"_id":"themes/icarus/includes/specs/meta.spec.js","hash":"ed1b818b929d71930608291514a72ef5a639efee","modified":1577772530985},{"_id":"themes/icarus/includes/specs/navbar.spec.js","hash":"7de29c0031738a4de4d31ed4f7b0c43447c7961c","modified":1577772530985},{"_id":"themes/icarus/includes/specs/plugins.spec.js","hash":"2fb7a28fdde9a46f576e69b9967f24d66adffb57","modified":1577772530985},{"_id":"themes/icarus/includes/specs/providers.spec.js","hash":"820cc6936ba75e3104cc2e8641716ed65ada8b6f","modified":1577772530986},{"_id":"themes/icarus/includes/specs/search.spec.js","hash":"1e3995cdc471e6a2817cd45e2b6f0fd39b4540ec","modified":1577772530986},{"_id":"themes/icarus/includes/specs/share.spec.js","hash":"5ec65409a17ead13974140fc5ddc19e526586d9f","modified":1577772530986},{"_id":"themes/icarus/includes/specs/sidebar.spec.js","hash":"630c9701affe2549abc61cd4d1e5153af2224fb6","modified":1577772530987},{"_id":"themes/icarus/includes/specs/widgets.spec.js","hash":"c5cedfe1074c0566baf8aca248f0392a501d9a74","modified":1577772530987},{"_id":"themes/icarus/includes/tasks/check_config.js","hash":"ce7626d643737c90dee6b75435ccdec26b89dacf","modified":1577772530987},{"_id":"themes/icarus/includes/tasks/check_deps.js","hash":"ab08051f785eab2a0685aa537270d2988bc13639","modified":1577772530988},{"_id":"themes/icarus/includes/tasks/welcome.js","hash":"00d1ef8c9609552b82e9a5140b838a9057c59508","modified":1577772530988},{"_id":"themes/icarus/includes/utils/lru.js","hash":"35c0ede3553549758ff5e4ded2bc650778793377","modified":1577772530989},{"_id":"themes/apollo/.gitignore","hash":"a006beea0877a0aa3610ee00e73f62cb1d45125b","modified":1578035676537},{"_id":"themes/apollo/LICENSE","hash":"6e31ac9076bfc8f09ae47977419eee4edfb63e5b","modified":1578035676537},{"_id":"themes/apollo/README.md","hash":"8ce63966d1c7429121920c164c8613507ce30126","modified":1578035676537},{"_id":"themes/apollo/gulpfile.js","hash":"857a026b6643a2cd52c65d4ae0dc7fe9618206ee","modified":1578035676538},{"_id":"themes/apollo/_config.yml","hash":"261de70c54a5b6bac83afc8e1a77bbd715fae547","modified":1578035676537},{"_id":"themes/apollo/package.json","hash":"eb1e76ec0b7ed6c6c7b2bd32b4f1e1bbe15800ca","modified":1578035676540},{"_id":"themes/apollo/languages/en.yml","hash":"ca168b190932229884db1de755ec2f793c758a16","modified":1578035676538},{"_id":"themes/apollo/doc/doc-zh.md","hash":"2a6a81840cdaf497969268a12d8f62c98cc38103","modified":1578035676538},{"_id":"themes/apollo/doc/doc-en.md","hash":"409e931a444c02a57b64a0a44dde6e66c1881ca0","modified":1578035676538},{"_id":"themes/apollo/languages/zh-cn.yml","hash":"22a2d16fe8c0dddb016b5325b9b9c182a1b49ae1","modified":1578035676538},{"_id":"themes/apollo/layout/index.jade","hash":"55f2f1b4b5364a0e09cb18e1112664c6415fb881","modified":1578035676538},{"_id":"themes/apollo/layout/archive.jade","hash":"62797414355bf4474092bc3a32726c8340820ffb","modified":1578035676538},{"_id":"themes/apollo/layout/post.jade","hash":"245c26244c075c3632d1545c3b228ee9d112f15d","modified":1578035676540},{"_id":"themes/apollo/source/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1578035676540},{"_id":"themes/apollo/layout/mixins/paginator.jade","hash":"f4ee2fb61a32e199b48cf93771749edc8a007391","modified":1578035676539},{"_id":"themes/apollo/layout/mixins/post.jade","hash":"f23c6c40e14cdf16783b3c2baf736c9dce18408c","modified":1578035676539},{"_id":"themes/apollo/layout/partial/comment.jade","hash":"ff0a2c269c2434da2ac5529872f1d6184a71f96d","modified":1578035676539},{"_id":"themes/apollo/layout/partial/copyright.jade","hash":"217f8b17054e5079f2d30bb7e2e4e36c0f2161b7","modified":1578035676539},{"_id":"themes/apollo/layout/partial/head.jade","hash":"43d2db73f0247a9a3ed00ecb95b537a872b7201a","modified":1578035676539},{"_id":"themes/apollo/layout/partial/layout.jade","hash":"529c2ec06cfbc3d5b6d66dd320db50dfab5577a6","modified":1578035676539},{"_id":"themes/apollo/layout/partial/scripts.jade","hash":"6bff591ae3d1ff6750f239c4c933ad61f009f36a","modified":1578035676540},{"_id":"themes/apollo/layout/partial/nav.jade","hash":"f4842d9d3d763fbb823d112a6f49f24cc42a0ad4","modified":1578035676540},{"_id":"themes/apollo/source/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1578035676540},{"_id":"themes/apollo/source/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1578035676541},{"_id":"themes/apollo/source/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1578035676541},{"_id":"themes/apollo/source/scss/apollo.scss","hash":"e0092f469264b55b25e0d441274f1c812147e7d1","modified":1578035676542},{"_id":"themes/apollo/source/scss/_partial/base.scss","hash":"ae967b2049ecb9b8c4e139ecce32fd9fb5358ac5","modified":1578035676541},{"_id":"themes/apollo/source/scss/_partial/copyright.scss","hash":"1309667e3000037170cfbb5b8c9c65f4ffcf6814","modified":1578035676541},{"_id":"themes/apollo/source/scss/_partial/archive-post-list.scss","hash":"d2f740a7d48349b7536777c795f82ab740836d0f","modified":1578035676541},{"_id":"themes/apollo/source/scss/_partial/footer.scss","hash":"094aca6e52f11b139ac7980ca03fa7b9d8fc7b2f","modified":1578035676541},{"_id":"themes/apollo/source/scss/_partial/home-post-list.scss","hash":"6b5c59f3d2295944f934aee2c1156012a3306d5d","modified":1578035676542},{"_id":"themes/apollo/source/scss/_partial/header.scss","hash":"153bde88bf8ffeae4ffd813d8cc694dd83d33d94","modified":1578035676542},{"_id":"themes/apollo/source/scss/_partial/mq.scss","hash":"fc5dda52cfbb10e27e2471e03f4606fb3d588225","modified":1578035676542},{"_id":"themes/apollo/source/scss/_partial/normalize.scss","hash":"fd0b27bed6f103ea95b08f698ea663ff576dbcf1","modified":1578035676542},{"_id":"themes/apollo/source/scss/_partial/post.scss","hash":"1998f207541a2590a5624549f96c5e65d136690a","modified":1578035676542},{"_id":"public/atom.xml","hash":"5436d236f771db639cac1c68965941783d135525","modified":1583684442247},{"_id":"public/sitemap.xml","hash":"a951f737999ec5de22cd401cd7ceaf22da4959e9","modified":1583684442247},{"_id":"public/content.json","hash":"d511e70a5be078331be60ba2681a40d79e28161f","modified":1583684442247},{"_id":"public/archives/index.html","hash":"8a5cedea772b491edfb1e94cf85e309de5d70121","modified":1583682330842},{"_id":"public/archives/2019/index.html","hash":"f8e8cc4b478e74e5cb9b05c82cb9149c6f6f7109","modified":1583682330842},{"_id":"public/archives/2019/12/index.html","hash":"327acfaf03f697a5a59ac3578189c2fbb6073e10","modified":1583682330842},{"_id":"public/categories/index.html","hash":"16cdbbc558e3815486de278afa07e88cbf946b32","modified":1583682330842},{"_id":"public/tags/index.html","hash":"e86108448a6f850e6617d6818dc9d97ec7de7323","modified":1583682330842},{"_id":"public/2019/12/28/hello-world/index.html","hash":"87bbbe5841998cf472da4fa5beaa468750745ded","modified":1583682330842},{"_id":"public/index.html","hash":"5f008065391b61f6da78a8fd3dda5275f3f30022","modified":1583682870788},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1579252320491},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1579252320491},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1579252320491},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1579252320491},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1579252320491},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1579252320491},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1579252320491},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1579252320491},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1579252320491},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1579252320491},{"_id":"public/font/sourcesanspro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1579252320491},{"_id":"public/font/sourcesanspro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1579252320491},{"_id":"public/images/arrow-right.svg","hash":"98c04bf1be3ca657f1e9697dc63219ade0a5616c","modified":1579252320491},{"_id":"public/images/mail.svg","hash":"18b3549b0447d605ca252fefcaa4d8e11179ce21","modified":1579252320491},{"_id":"public/images/github.svg","hash":"bc2e3f2e54c354acfe64899482f6379d25f04792","modified":1579252320491},{"_id":"public/images/arrow-left.svg","hash":"4230dcb796a40d7a0f54c68e1ffb1f325ad962a5","modified":1579252320491},{"_id":"public/images/twitter.svg","hash":"2bef6c843de0113721c6c5d1676385897a22a446","modified":1579252320491},{"_id":"public/images/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1583635860003},{"_id":"public/images/menu.svg","hash":"a1837ac76bc3e2aaf30450941bfefcb29ba16411","modified":1579252320491},{"_id":"public/images/logo.svg","hash":"10e8b84bcc4acd567e11a3913a0c45a886851b18","modified":1583635860003},{"_id":"public/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1583635860003},{"_id":"public/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1583635860003},{"_id":"public/images/weibo.svg","hash":"ffd43d8ae9f9ec4f5ae8b97cafa9023ac2a4e59b","modified":1579252320491},{"_id":"public/images/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1583635860003},{"_id":"public/favicon.png","hash":"a9cdcb22d1e74d5480323e19d1983de5a6873b8c","modified":1579252320491},{"_id":"public/favicon.ico","hash":"ff97e9eeb291dcd407982d438f482280aa25a6d9","modified":1579252320491},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1579252320491},{"_id":"public/css/style.css","hash":"1c8294b7b8a8eddd2728baf24a6a5b0f840669d2","modified":1583684442247},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1579252320491},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1579252320491},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1579252320491},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1579252320491},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1579252320491},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1579252320491},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1579252320491},{"_id":"public/css/gandalfr.css","hash":"1fdfe637e7916bdae433f5738a7e4ece3573f08d","modified":1579252320491},{"_id":"public/js/app.js","hash":"b74710d1dd7b7d1407b4fcfc9499bc37de69b21e","modified":1579252320491},{"_id":"public/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1583635860003},{"_id":"public/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1583635860003},{"_id":"public/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1583635860003},{"_id":"public/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1583635860003},{"_id":"public/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1583635860003},{"_id":"public/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1583635860003},{"_id":"public/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1583635860003},{"_id":"public/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1583635860003},{"_id":"public/js/main.js","hash":"9d58a64d1168ef3ab7f498f2e8b4f53fb23db462","modified":1583635860003},{"_id":"public/css/apollo.css","hash":"e07a11a5da5fc097f023e06a85575356066afd09","modified":1579252320491},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1579252320491},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1579252320491},{"_id":"public/scss/gandalfr.css","hash":"232489e4eb5f3583d65d94458db9b07351d95644","modified":1579252320491},{"_id":"public/scss/apollo.css","hash":"6216c473855db6af71f910746be48405c8c499f6","modified":1579252320491},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1579252320491},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1579252320491},{"_id":"source/_posts/Java中的防御性编程.md","hash":"279a9066969ba805a2a0648dfb27cd3f854c985d","modified":1583515946030},{"_id":"source/gallery/.DS_Store","hash":"e42887c0e092b8d25dfbacd28be43e0350f74fbf","modified":1583682232230},{"_id":"source/gallery/thumbnails/DefensiveProgramming.jpg","hash":"558db2b5e5b9675d791a7f94f1a60333368e0c02","modified":1440991234000},{"_id":"source/_posts/编写卓越的代码:防御性编程.md","hash":"279a9066969ba805a2a0648dfb27cd3f854c985d","modified":1583515992404},{"_id":"source/_posts/编写卓越的代码——防御性编程.md","hash":"90a499183dea7f66c3bf5862b0651fd9f0631828","modified":1583517833455},{"_id":"source/.DS_Store","hash":"168d67479a2a263029b02511722676b8b5a3d518","modified":1583557654304},{"_id":"themes/icarus/.DS_Store","hash":"76b26721f095605fc6a4fb8c0babbc54d5bc3ebf","modified":1583557679414},{"_id":"themes/icarus/source/.DS_Store","hash":"ed01a06d1fea8a9217f5ded5c1a17a6196faca2d","modified":1583557672539},{"_id":"themes/icarus/source/images/logo1.svg","hash":"df44312c5fd8e96f35c16feda8ee135369394008","modified":1583563328257},{"_id":"public/2020/03/07/编写卓越的代码——防御性编程/index.html","hash":"4a3c050f0900833d6a2b5b5a11836fe3ed7480f1","modified":1583682330842},{"_id":"public/categories/Coding/index.html","hash":"e8156d1a9fa5c93d5acdeef905cd8915ccd93ace","modified":1583682870788},{"_id":"public/archives/2020/03/index.html","hash":"e9add2d33db74f47a68300147473cb46f369923f","modified":1583682330842},{"_id":"public/tags/Coding/index.html","hash":"33cd72a174bf7994ef3250bf190743cb27fe6e88","modified":1583682330842},{"_id":"public/tags/Defensive-Programming/index.html","hash":"ae84b38c351dd971da680e857026dbbec00ef253","modified":1583682330842},{"_id":"public/categories/Coding/Defensive-Programming/index.html","hash":"6d9536a3f68760ce31e7f0f8126008b8b958607f","modified":1583682330842},{"_id":"public/archives/2020/index.html","hash":"61bda7874f7590dfde89aacfc14928383f0b956a","modified":1583682330842},{"_id":"public/images/logo1.svg","hash":"df44312c5fd8e96f35c16feda8ee135369394008","modified":1583635860003},{"_id":"public/gallery/thumbnails/DefensiveProgramming.jpg","hash":"558db2b5e5b9675d791a7f94f1a60333368e0c02","modified":1583635860003},{"_id":"public/blog/index.html","hash":"bba941e79ca89474a6094ef0c2b49d5e335c0a57","modified":1583635798728},{"_id":"source/_posts/ParallelStream-的正确打开方式.md","hash":"afc27e1d0b93defe9f505f1b82eb3847186630e2","modified":1583684427230},{"_id":"source/gallery/thumbnails/java-streams.png","hash":"8202b558f3ebe3cd24bc747fc3b8c9cdc3b15829","modified":1583677428056},{"_id":"public/2020/03/08/ParallelStream-的正确打开方式/index.html","hash":"9861b4cec41776c609f848482eb325c2f76224e1","modified":1583684442247},{"_id":"public/categories/Coding/Java/index.html","hash":"7eed7151060406c9910d7f89181bc85637243d50","modified":1583682870788},{"_id":"public/tags/Java/index.html","hash":"0ed8574a528666833536e32ac5f0d9b3cab34033","modified":1583682870788},{"_id":"public/tags/Stream/index.html","hash":"d8205c87b7385830a5ea3ca4ce7f048b663ab9c2","modified":1583682870788},{"_id":"public/gallery/thumbnails/java-streams.png","hash":"8202b558f3ebe3cd24bc747fc3b8c9cdc3b15829","modified":1583679322680},{"_id":"source/gallery/thumbnails/java-streams.jpg","hash":"9f290bd9a194ab1e6164796e11610e91ab582422","modified":1583682294455},{"_id":"public/gallery/thumbnails/java-streams.jpg","hash":"9f290bd9a194ab1e6164796e11610e91ab582422","modified":1583682330842}],"Category":[{"name":"Diary","_id":"ck7ge5nml0001oit7eygj6u91"},{"name":"Coding","_id":"ck7ge5to80005oit73jwx97jk"},{"name":"Defensive Programming","parent":"ck7ge5to80005oit73jwx97jk","_id":"ck7gfrsph0002upt72cug1e9q"},{"name":"Java","parent":"ck7ge5to80005oit73jwx97jk","_id":"ck7j59qkd0002olt7e3uwhy1x"}],"Data":[],"Page":[],"Post":[{"title":"Hello World","toc":true,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n```java\npackage com.hypers.task;\n\nimport com.alibaba.fastjson.JSON;\nimport com.hypers.S3.S3Config;\nimport com.hypers.S3.aws.AwsS3Upload;\nimport com.hypers.entity.Account;\nimport com.hypers.entity.Campaign;\nimport com.hypers.entity.ManualMessage;\nimport com.hypers.service.CampaignService;\nimport com.hypers.util.common.FileUtil;\nimport com.hypers.util.hfa.ZipUtils;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\n\n/**\n * 活动定时上传s3，\n */\n@Component\npublic class CampaignTask {\n\n  @Autowired\n  AwsS3Upload upload;\n  @Autowired\n  S3Config s3Config;\n  @Autowired\n  private CampaignService campaignService;\n\n  private static final String name = \"FREQUENCY\";\n  private static final String SUB_JSON = \".json\";\n  private static final String SUB_ZIP = \".zip\";\n  private static final String TEMP = \"/temp/\";\n\n  /**\n   * 每天凌晨执行，统计已过去一天需计算的内容\n   */\n  @Scheduled(cron = \"10 0 0 * * ? \")\n  public void execute() {\n    /**\n     * 统计上传所需计算的当天截止时间的所有活动（出现过的活动,无视停启用状态）\n     * TA 筛选的问题需要加\n     */\n    try {\n      Calendar calendar = Calendar.getInstance(); // calendar.set(2019, 11, 26);\n      Date date = calendar.getTime();//DateUtils.addDays(, );//DateUtils.addMonths( -1);\n\n      uploadFrequencyFile(date, null, null);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  /**\n   * 频次计算清单文件上传\n   */\n  private void uploadFrequencyFile(Date date, List<Long> accountIds, List<Long> orderIds)\n      throws Exception {\n    String localPath = s3Config.getTempPath() + TEMP;\n    List<Campaign> campaignByDate = campaignService\n        .calCampaign(campaignService.getCampaignByDate(date, accountIds, orderIds));\n    String content = JSON.toJSONString(campaignByDate);\n\n    FileUtil.writeFile(localPath, name + SUB_JSON, content);\n    File file = new File(localPath + name + SUB_JSON);\n    ZipUtils.zipFile(file, \"\");\n    file = new File(localPath + name + SUB_ZIP);\n//    upload.uploadFile(s3Config.getBucket(), s3Config.getFrequencyPath(), file);\n    upload.uploadFileWithPublicReadAccess(s3Config.getBucket(), s3Config.getFrequencyPath(),\n        file.getName(), new FileInputStream(file), 0);\n    FileUtil.delete(localPath, name);\n  }\n\n  /**\n   * 人工操作：指定日期范围\n   */\n  public void execute(ManualMessage message) throws Exception {\n    switch (message.getType()) {\n      case \"operate\": // 运营报告\n        //计算运营计算清单，发送计算端，目前不支持\n        break;\n      case \"frequency\": // 频次报告重算（测试操作）\n        //计算重算清单，发送计算端\n        /**\n         * 1.仅指定天重算对应天数据，范围型不支持 (不支持)\n         * 2.指定活动，重算该活动及其下所有订单 （没有时间范围默认全范围，可指定范围）\n         * 3.指定订单，只算对应活动的指定订单（没有时间范围默认全范围，可指定范围）\n         */\n        List<Long> accountIds = new ArrayList<>();\n        List<Long> lineOrderIds = new ArrayList<>();\n        List<Account> account = message.getAccount();\n        account.forEach(a -> {\n          if (a.getLineOrders() != null && a.getLineOrders().size() > 0) {\n            lineOrderIds.addAll(a.getLineOrders());\n          } else {\n            accountIds.add(a.getId());\n          }\n        });\n        Calendar calendar = Calendar.getInstance(); // calendar.set(2019, 11, 26);\n        Date date = calendar.getTime();//DateUtils.addDays(, -1);//DateUtils.addMonths( -1);\n        uploadFrequencyFile(date, accountIds, lineOrderIds);\n        break;\n      default:\n        // 发送报警邮件\n        break;\n    }\n  }\n\n\n}\n\n\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntoc: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n```java\npackage com.hypers.task;\n\nimport com.alibaba.fastjson.JSON;\nimport com.hypers.S3.S3Config;\nimport com.hypers.S3.aws.AwsS3Upload;\nimport com.hypers.entity.Account;\nimport com.hypers.entity.Campaign;\nimport com.hypers.entity.ManualMessage;\nimport com.hypers.service.CampaignService;\nimport com.hypers.util.common.FileUtil;\nimport com.hypers.util.hfa.ZipUtils;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\n\n/**\n * 活动定时上传s3，\n */\n@Component\npublic class CampaignTask {\n\n  @Autowired\n  AwsS3Upload upload;\n  @Autowired\n  S3Config s3Config;\n  @Autowired\n  private CampaignService campaignService;\n\n  private static final String name = \"FREQUENCY\";\n  private static final String SUB_JSON = \".json\";\n  private static final String SUB_ZIP = \".zip\";\n  private static final String TEMP = \"/temp/\";\n\n  /**\n   * 每天凌晨执行，统计已过去一天需计算的内容\n   */\n  @Scheduled(cron = \"10 0 0 * * ? \")\n  public void execute() {\n    /**\n     * 统计上传所需计算的当天截止时间的所有活动（出现过的活动,无视停启用状态）\n     * TA 筛选的问题需要加\n     */\n    try {\n      Calendar calendar = Calendar.getInstance(); // calendar.set(2019, 11, 26);\n      Date date = calendar.getTime();//DateUtils.addDays(, );//DateUtils.addMonths( -1);\n\n      uploadFrequencyFile(date, null, null);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  /**\n   * 频次计算清单文件上传\n   */\n  private void uploadFrequencyFile(Date date, List<Long> accountIds, List<Long> orderIds)\n      throws Exception {\n    String localPath = s3Config.getTempPath() + TEMP;\n    List<Campaign> campaignByDate = campaignService\n        .calCampaign(campaignService.getCampaignByDate(date, accountIds, orderIds));\n    String content = JSON.toJSONString(campaignByDate);\n\n    FileUtil.writeFile(localPath, name + SUB_JSON, content);\n    File file = new File(localPath + name + SUB_JSON);\n    ZipUtils.zipFile(file, \"\");\n    file = new File(localPath + name + SUB_ZIP);\n//    upload.uploadFile(s3Config.getBucket(), s3Config.getFrequencyPath(), file);\n    upload.uploadFileWithPublicReadAccess(s3Config.getBucket(), s3Config.getFrequencyPath(),\n        file.getName(), new FileInputStream(file), 0);\n    FileUtil.delete(localPath, name);\n  }\n\n  /**\n   * 人工操作：指定日期范围\n   */\n  public void execute(ManualMessage message) throws Exception {\n    switch (message.getType()) {\n      case \"operate\": // 运营报告\n        //计算运营计算清单，发送计算端，目前不支持\n        break;\n      case \"frequency\": // 频次报告重算（测试操作）\n        //计算重算清单，发送计算端\n        /**\n         * 1.仅指定天重算对应天数据，范围型不支持 (不支持)\n         * 2.指定活动，重算该活动及其下所有订单 （没有时间范围默认全范围，可指定范围）\n         * 3.指定订单，只算对应活动的指定订单（没有时间范围默认全范围，可指定范围）\n         */\n        List<Long> accountIds = new ArrayList<>();\n        List<Long> lineOrderIds = new ArrayList<>();\n        List<Account> account = message.getAccount();\n        account.forEach(a -> {\n          if (a.getLineOrders() != null && a.getLineOrders().size() > 0) {\n            lineOrderIds.addAll(a.getLineOrders());\n          } else {\n            accountIds.add(a.getId());\n          }\n        });\n        Calendar calendar = Calendar.getInstance(); // calendar.set(2019, 11, 26);\n        Date date = calendar.getTime();//DateUtils.addDays(, -1);//DateUtils.addMonths( -1);\n        uploadFrequencyFile(date, accountIds, lineOrderIds);\n        break;\n      default:\n        // 发送报警邮件\n        break;\n    }\n  }\n\n\n}\n\n\n```\n","slug":"hello-world","published":1,"date":"2019-12-28T02:34:08.480Z","updated":"2020-01-08T08:44:31.196Z","_id":"ck4oz8rgn00005lt71den9krb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hypers.task;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.S3.S3Config;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.S3.aws.AwsS3Upload;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.Account;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.Campaign;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.ManualMessage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.service.CampaignService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.util.common.FileUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.util.hfa.ZipUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 活动定时上传s3，</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CampaignTask</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  AwsS3Upload upload;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  S3Config s3Config;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> CampaignService campaignService;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String name = <span class=\"string\">\"FREQUENCY\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SUB_JSON = <span class=\"string\">\".json\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SUB_ZIP = <span class=\"string\">\".zip\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TEMP = <span class=\"string\">\"/temp/\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 每天凌晨执行，统计已过去一天需计算的内容</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"meta\">@Scheduled</span>(cron = <span class=\"string\">\"10 0 0 * * ? \"</span>)</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 统计上传所需计算的当天截止时间的所有活动（出现过的活动,无视停启用状态）</span></span><br><span class=\"line\"><span class=\"comment\">     * TA 筛选的问题需要加</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Calendar calendar = Calendar.getInstance(); <span class=\"comment\">// calendar.set(2019, 11, 26);</span></span><br><span class=\"line\">      Date date = calendar.getTime();<span class=\"comment\">//DateUtils.addDays(, );//DateUtils.addMonths( -1);</span></span><br><span class=\"line\"></span><br><span class=\"line\">      uploadFrequencyFile(date, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 频次计算清单文件上传</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">uploadFrequencyFile</span><span class=\"params\">(Date date, List&lt;Long&gt; accountIds, List&lt;Long&gt; orderIds)</span></span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    String localPath = s3Config.getTempPath() + TEMP;</span><br><span class=\"line\">    List&lt;Campaign&gt; campaignByDate = campaignService</span><br><span class=\"line\">        .calCampaign(campaignService.getCampaignByDate(date, accountIds, orderIds));</span><br><span class=\"line\">    String content = JSON.toJSONString(campaignByDate);</span><br><span class=\"line\"></span><br><span class=\"line\">    FileUtil.writeFile(localPath, name + SUB_JSON, content);</span><br><span class=\"line\">    File file = <span class=\"keyword\">new</span> File(localPath + name + SUB_JSON);</span><br><span class=\"line\">    ZipUtils.zipFile(file, <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    file = <span class=\"keyword\">new</span> File(localPath + name + SUB_ZIP);</span><br><span class=\"line\"><span class=\"comment\">//    upload.uploadFile(s3Config.getBucket(), s3Config.getFrequencyPath(), file);</span></span><br><span class=\"line\">    upload.uploadFileWithPublicReadAccess(s3Config.getBucket(), s3Config.getFrequencyPath(),</span><br><span class=\"line\">        file.getName(), <span class=\"keyword\">new</span> FileInputStream(file), <span class=\"number\">0</span>);</span><br><span class=\"line\">    FileUtil.delete(localPath, name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 人工操作：指定日期范围</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">(ManualMessage message)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (message.getType()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"operate\"</span>: <span class=\"comment\">// 运营报告</span></span><br><span class=\"line\">        <span class=\"comment\">//计算运营计算清单，发送计算端，目前不支持</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"frequency\"</span>: <span class=\"comment\">// 频次报告重算（测试操作）</span></span><br><span class=\"line\">        <span class=\"comment\">//计算重算清单，发送计算端</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 1.仅指定天重算对应天数据，范围型不支持 (不支持)</span></span><br><span class=\"line\"><span class=\"comment\">         * 2.指定活动，重算该活动及其下所有订单 （没有时间范围默认全范围，可指定范围）</span></span><br><span class=\"line\"><span class=\"comment\">         * 3.指定订单，只算对应活动的指定订单（没有时间范围默认全范围，可指定范围）</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        List&lt;Long&gt; accountIds = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        List&lt;Long&gt; lineOrderIds = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        List&lt;Account&gt; account = message.getAccount();</span><br><span class=\"line\">        account.forEach(a -&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (a.getLineOrders() != <span class=\"keyword\">null</span> &amp;&amp; a.getLineOrders().size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            lineOrderIds.addAll(a.getLineOrders());</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            accountIds.add(a.getId());</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        Calendar calendar = Calendar.getInstance(); <span class=\"comment\">// calendar.set(2019, 11, 26);</span></span><br><span class=\"line\">        Date date = calendar.getTime();<span class=\"comment\">//DateUtils.addDays(, -1);//DateUtils.addMonths( -1);</span></span><br><span class=\"line\">        uploadFrequencyFile(date, accountIds, lineOrderIds);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"comment\">// 发送报警邮件</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hypers.task;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSON;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.S3.S3Config;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.S3.aws.AwsS3Upload;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.Account;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.Campaign;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.entity.ManualMessage;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.service.CampaignService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.util.common.FileUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hypers.util.hfa.ZipUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Calendar;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 活动定时上传s3，</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CampaignTask</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  AwsS3Upload upload;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  S3Config s3Config;</span><br><span class=\"line\">  <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> CampaignService campaignService;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String name = <span class=\"string\">\"FREQUENCY\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SUB_JSON = <span class=\"string\">\".json\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SUB_ZIP = <span class=\"string\">\".zip\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TEMP = <span class=\"string\">\"/temp/\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 每天凌晨执行，统计已过去一天需计算的内容</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"meta\">@Scheduled</span>(cron = <span class=\"string\">\"10 0 0 * * ? \"</span>)</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 统计上传所需计算的当天截止时间的所有活动（出现过的活动,无视停启用状态）</span></span><br><span class=\"line\"><span class=\"comment\">     * TA 筛选的问题需要加</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Calendar calendar = Calendar.getInstance(); <span class=\"comment\">// calendar.set(2019, 11, 26);</span></span><br><span class=\"line\">      Date date = calendar.getTime();<span class=\"comment\">//DateUtils.addDays(, );//DateUtils.addMonths( -1);</span></span><br><span class=\"line\"></span><br><span class=\"line\">      uploadFrequencyFile(date, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 频次计算清单文件上传</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">uploadFrequencyFile</span><span class=\"params\">(Date date, List&lt;Long&gt; accountIds, List&lt;Long&gt; orderIds)</span></span></span><br><span class=\"line\"><span class=\"function\">      <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    String localPath = s3Config.getTempPath() + TEMP;</span><br><span class=\"line\">    List&lt;Campaign&gt; campaignByDate = campaignService</span><br><span class=\"line\">        .calCampaign(campaignService.getCampaignByDate(date, accountIds, orderIds));</span><br><span class=\"line\">    String content = JSON.toJSONString(campaignByDate);</span><br><span class=\"line\"></span><br><span class=\"line\">    FileUtil.writeFile(localPath, name + SUB_JSON, content);</span><br><span class=\"line\">    File file = <span class=\"keyword\">new</span> File(localPath + name + SUB_JSON);</span><br><span class=\"line\">    ZipUtils.zipFile(file, <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    file = <span class=\"keyword\">new</span> File(localPath + name + SUB_ZIP);</span><br><span class=\"line\"><span class=\"comment\">//    upload.uploadFile(s3Config.getBucket(), s3Config.getFrequencyPath(), file);</span></span><br><span class=\"line\">    upload.uploadFileWithPublicReadAccess(s3Config.getBucket(), s3Config.getFrequencyPath(),</span><br><span class=\"line\">        file.getName(), <span class=\"keyword\">new</span> FileInputStream(file), <span class=\"number\">0</span>);</span><br><span class=\"line\">    FileUtil.delete(localPath, name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 人工操作：指定日期范围</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">(ManualMessage message)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (message.getType()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"operate\"</span>: <span class=\"comment\">// 运营报告</span></span><br><span class=\"line\">        <span class=\"comment\">//计算运营计算清单，发送计算端，目前不支持</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"frequency\"</span>: <span class=\"comment\">// 频次报告重算（测试操作）</span></span><br><span class=\"line\">        <span class=\"comment\">//计算重算清单，发送计算端</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 1.仅指定天重算对应天数据，范围型不支持 (不支持)</span></span><br><span class=\"line\"><span class=\"comment\">         * 2.指定活动，重算该活动及其下所有订单 （没有时间范围默认全范围，可指定范围）</span></span><br><span class=\"line\"><span class=\"comment\">         * 3.指定订单，只算对应活动的指定订单（没有时间范围默认全范围，可指定范围）</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        List&lt;Long&gt; accountIds = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        List&lt;Long&gt; lineOrderIds = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        List&lt;Account&gt; account = message.getAccount();</span><br><span class=\"line\">        account.forEach(a -&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (a.getLineOrders() != <span class=\"keyword\">null</span> &amp;&amp; a.getLineOrders().size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            lineOrderIds.addAll(a.getLineOrders());</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            accountIds.add(a.getId());</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        Calendar calendar = Calendar.getInstance(); <span class=\"comment\">// calendar.set(2019, 11, 26);</span></span><br><span class=\"line\">        Date date = calendar.getTime();<span class=\"comment\">//DateUtils.addDays(, -1);//DateUtils.addMonths( -1);</span></span><br><span class=\"line\">        uploadFrequencyFile(date, accountIds, lineOrderIds);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"comment\">// 发送报警邮件</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"编写卓越的代码——防御性编程","date":"2020-03-06T16:24:37.000Z","toc":true,"comments":1,"thumbnail":"/gallery/thumbnails/DefensiveProgramming.jpg","_content":"\n# 编写卓越的代码\n{% blockquote M.A.Jackson, 《程序设计原理》 %}\n软件**工程师**的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。\n{% endblockquote %}\n\n- **可用的代码**：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。\n- **正确的代码**：对于所有输入集，有正确的输出；\n- **优秀的代码**：一定是正确的代码；逻辑容易理解；代码自然；容易维护。\n\n<!-- more -->\n\n# 防御性编程\n\n防御性编程是一种细致、谨慎的编程方法。为了开发可靠的软件，我们要设计系统中的每个组件，以使其尽可能地“保护”自己。我们通过明确地在代码中对设想进行检查，击碎了未记录下来的设想。这是一种努力，防止（或至少是观察）我们的代码以将会展现错误行为的方式被调用。\n\n\n# Java 中的实践\n\n{% codeblock Integer.parseInt() lang:java https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html Integer %}\npublic static int parseInt(String s, int radix) throws NumberFormatException{\n        if (s == null) {\n            throw new NumberFormatException(\"null\");\n        }\n        if (radix < Character.MIN_RADIX) {\n            throw new NumberFormatException(\"radix \" + radix +\n                                            \" less than Character.MIN_RADIX\");\n        }\n        if (radix > Character.MAX_RADIX) {\n            throw new NumberFormatException(\"radix \" + radix +\n                                            \" greater than Character.MAX_RADIX\");\n        }\n      // 主逻辑\n}\n{% endcodeblock %}","source":"_posts/编写卓越的代码——防御性编程.md","raw":"---\ntitle: 编写卓越的代码——防御性编程\ndate: 2020-03-07 00:24:37\ncategories:\n- Coding\n- Defensive Programming\ntags: \n- Coding\n- Defensive Programming\ntoc: true\ncomments: true\nthumbnail: /gallery/thumbnails/DefensiveProgramming.jpg\n---\n\n# 编写卓越的代码\n{% blockquote M.A.Jackson, 《程序设计原理》 %}\n软件**工程师**的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。\n{% endblockquote %}\n\n- **可用的代码**：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。\n- **正确的代码**：对于所有输入集，有正确的输出；\n- **优秀的代码**：一定是正确的代码；逻辑容易理解；代码自然；容易维护。\n\n<!-- more -->\n\n# 防御性编程\n\n防御性编程是一种细致、谨慎的编程方法。为了开发可靠的软件，我们要设计系统中的每个组件，以使其尽可能地“保护”自己。我们通过明确地在代码中对设想进行检查，击碎了未记录下来的设想。这是一种努力，防止（或至少是观察）我们的代码以将会展现错误行为的方式被调用。\n\n\n# Java 中的实践\n\n{% codeblock Integer.parseInt() lang:java https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html Integer %}\npublic static int parseInt(String s, int radix) throws NumberFormatException{\n        if (s == null) {\n            throw new NumberFormatException(\"null\");\n        }\n        if (radix < Character.MIN_RADIX) {\n            throw new NumberFormatException(\"radix \" + radix +\n                                            \" less than Character.MIN_RADIX\");\n        }\n        if (radix > Character.MAX_RADIX) {\n            throw new NumberFormatException(\"radix \" + radix +\n                                            \" greater than Character.MAX_RADIX\");\n        }\n      // 主逻辑\n}\n{% endcodeblock %}","slug":"编写卓越的代码——防御性编程","published":1,"updated":"2020-03-06T18:03:53.455Z","_id":"ck7ggk7i50000c5t7h9qyd99a","layout":"post","photos":[],"link":"","content":"<h1 id=\"编写卓越的代码\"><a href=\"#编写卓越的代码\" class=\"headerlink\" title=\"编写卓越的代码\"></a>编写卓越的代码</h1><blockquote><p>软件<strong>工程师</strong>的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。</p>\n<footer><strong>M.A.Jackson</strong><cite>《程序设计原理》</cite></footer></blockquote>\n\n<ul>\n<li><strong>可用的代码</strong>：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。</li>\n<li><strong>正确的代码</strong>：对于所有输入集，有正确的输出；</li>\n<li><strong>优秀的代码</strong>：一定是正确的代码；逻辑容易理解；代码自然；容易维护。</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"防御性编程\"><a href=\"#防御性编程\" class=\"headerlink\" title=\"防御性编程\"></a>防御性编程</h1><p>防御性编程是一种细致、谨慎的编程方法。为了开发可靠的软件，我们要设计系统中的每个组件，以使其尽可能地“保护”自己。我们通过明确地在代码中对设想进行检查，击碎了未记录下来的设想。这是一种努力，防止（或至少是观察）我们的代码以将会展现错误行为的方式被调用。</p>\n<h1 id=\"Java-中的实践\"><a href=\"#Java-中的实践\" class=\"headerlink\" title=\"Java 中的实践\"></a>Java 中的实践</h1><figure class=\"highlight java\"><figcaption><span>Integer.parseInt()</span><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">parseInt</span><span class=\"params\">(String s, <span class=\"keyword\">int</span> radix)</span> <span class=\"keyword\">throws</span> NumberFormatException</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"null\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (radix &lt; Character.MIN_RADIX) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"radix \"</span> + radix +</span><br><span class=\"line\">                                            <span class=\"string\">\" less than Character.MIN_RADIX\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (radix &gt; Character.MAX_RADIX) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"radix \"</span> + radix +</span><br><span class=\"line\">                                            <span class=\"string\">\" greater than Character.MAX_RADIX\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 主逻辑</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"编写卓越的代码\"><a href=\"#编写卓越的代码\" class=\"headerlink\" title=\"编写卓越的代码\"></a>编写卓越的代码</h1><blockquote><p>软件<strong>工程师</strong>的智慧，就在于他们是否开始意识到：使程序能用和使程序正确，这两者之间有什么样的差别。</p>\n<footer><strong>M.A.Jackson</strong><cite>《程序设计原理》</cite></footer></blockquote>\n\n<ul>\n<li><strong>可用的代码</strong>：提供常规输入集，代码给出常规输出；一旦有意外输入，代码崩溃。</li>\n<li><strong>正确的代码</strong>：对于所有输入集，有正确的输出；</li>\n<li><strong>优秀的代码</strong>：一定是正确的代码；逻辑容易理解；代码自然；容易维护。</li>\n</ul>","more":"<h1 id=\"防御性编程\"><a href=\"#防御性编程\" class=\"headerlink\" title=\"防御性编程\"></a>防御性编程</h1><p>防御性编程是一种细致、谨慎的编程方法。为了开发可靠的软件，我们要设计系统中的每个组件，以使其尽可能地“保护”自己。我们通过明确地在代码中对设想进行检查，击碎了未记录下来的设想。这是一种努力，防止（或至少是观察）我们的代码以将会展现错误行为的方式被调用。</p>\n<h1 id=\"Java-中的实践\"><a href=\"#Java-中的实践\" class=\"headerlink\" title=\"Java 中的实践\"></a>Java 中的实践</h1><figure class=\"highlight java\"><figcaption><span>Integer.parseInt()</span><a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">parseInt</span><span class=\"params\">(String s, <span class=\"keyword\">int</span> radix)</span> <span class=\"keyword\">throws</span> NumberFormatException</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"null\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (radix &lt; Character.MIN_RADIX) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"radix \"</span> + radix +</span><br><span class=\"line\">                                            <span class=\"string\">\" less than Character.MIN_RADIX\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (radix &gt; Character.MAX_RADIX) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> NumberFormatException(<span class=\"string\">\"radix \"</span> + radix +</span><br><span class=\"line\">                                            <span class=\"string\">\" greater than Character.MAX_RADIX\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 主逻辑</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ParallelStream 的正确打开方式","toc":true,"comments":1,"thumbnail":"/gallery/thumbnails/java-streams.jpg","date":"2020-03-08T14:17:06.000Z","_content":"\n\n# ParallelStream 是什么\n\n**ParallelStream** 其实就是一个并行执行的流.它通过默认的ForkJoinPool,可能提高你的多线程任务的速度.\n\n\n# ParallelStream 的作用\n\n**ParallelStream** 具有平行处理能力，处理的过程会分而治之，也就是将一个大任务切分成多个小任务，这表示每个任务都是一个操作。\n<!-- more -->\n\n\n{% codeblock forEach() lang:java %}\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nnumbers.parallelStream()\n       .forEach(out::println); \n{% endcodeblock %} \n\n上面的代码我们的到的不是顺序的1、2、3、4、5…，而是随机的顺序。\n\n如果需要按照原来的顺序便利，可以使用forEachOrdered()方法：\n{% codeblock forEachOrdered() lang:java %}\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nnumbers.parallelStream()\n       .forEachOrdered(out::println);\n{% endcodeblock %}\n\n# ParallelStream 的实现\n \nParallelStream 是由 ForkJoin 与 ForkJoinPool 实现的。\nForkJoinPool 使用相对少的线程来处理大量的任务。\n比如有一个任务需要处理100万的数据，那么这个任务会被分割成两个处理50万数据的任务，以此类推，直到任务单元被分割成一个预设的阈值大小的任务，直到这些子任务被执行完，这个任务才将完成。\n这和ThreadPoolExecutor的区别是，ThreadPoolExecutor 处理这个100万的任务会需要100万的线程。\n>ForkJoinPool 默认的大小等于当前机器的 CPU 核心数。\n>可以使用 ```-Djava.util.concurrent.ForkJoinPool.common.parallelism=N ``` 来设置 ForkJoinPool 的大小。\n>\n>**程序中的 ParallelStream 共用一个 commonForkJoinPool**。\n\n\n# ParallelStream 的坑\n\n**ParallelStream**固然有它强大的地方，但同样的，它也存在着陷阱。\n\n```java\n public Object query(List<Request> reqs) {\n     Optional<String> result = reqs.stream().parallel().map( -> {\n      return client.url(url).get();\n      }).findAny();\n      return result.get();\n}\n```\n\n上面的代码用来获取第一个返回的请求，注意网络请求属于IO操作，这里面存在在被阻塞的风险，故而这段代码的设计是存在问题。\n前面提到程序中的 ```ParallelStream``` 共用一个 commonForkJoinPool，试想如果这里调用的 API 响应比较慢，那么这段代码就会影响到其他使用 ```ParallelStream``` 的地方（**阻塞**其他任务）。这样的后果往往是不可估量的。\n\n# 如何正确使用 ParallelStream\n\n- 首先，我们需要考虑需不需要用```ParallelStream```。\n    1.是否需要并行？  \n    2.任务之间是否是独立的？是否会引起任何竞态条件？  \n    3.结果是否取决于任务的调用顺序？ \n    考虑过这三个问题后再决定是否使用```ParallelStream```。\n\n\n- 其次，使用指定的不与其他任务冲突的 ```ForkJoinPool```。\n\n```java\nForkJoinPool forkJoinPool = new ForkJoinPool(3);  \nforkJoinPool.submit(() -> {  \n    firstRange.parallelStream().forEach((number) -> {\n        try {\n            Thread.sleep(5);\n        } catch (InterruptedException e) { }\n    });\n});\n\n```\n\n","source":"_posts/ParallelStream-的正确打开方式.md","raw":"---\ntitle: ParallelStream 的正确打开方式\ntoc: true\ncomments: true\nthumbnail: /gallery/thumbnails/java-streams.jpg\ndate: 2020-03-08 22:17:06\ncategories: \n- Coding\n- Java\ntags: \n- Java\n- Stream\n---\n\n\n# ParallelStream 是什么\n\n**ParallelStream** 其实就是一个并行执行的流.它通过默认的ForkJoinPool,可能提高你的多线程任务的速度.\n\n\n# ParallelStream 的作用\n\n**ParallelStream** 具有平行处理能力，处理的过程会分而治之，也就是将一个大任务切分成多个小任务，这表示每个任务都是一个操作。\n<!-- more -->\n\n\n{% codeblock forEach() lang:java %}\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nnumbers.parallelStream()\n       .forEach(out::println); \n{% endcodeblock %} \n\n上面的代码我们的到的不是顺序的1、2、3、4、5…，而是随机的顺序。\n\n如果需要按照原来的顺序便利，可以使用forEachOrdered()方法：\n{% codeblock forEachOrdered() lang:java %}\nList<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\nnumbers.parallelStream()\n       .forEachOrdered(out::println);\n{% endcodeblock %}\n\n# ParallelStream 的实现\n \nParallelStream 是由 ForkJoin 与 ForkJoinPool 实现的。\nForkJoinPool 使用相对少的线程来处理大量的任务。\n比如有一个任务需要处理100万的数据，那么这个任务会被分割成两个处理50万数据的任务，以此类推，直到任务单元被分割成一个预设的阈值大小的任务，直到这些子任务被执行完，这个任务才将完成。\n这和ThreadPoolExecutor的区别是，ThreadPoolExecutor 处理这个100万的任务会需要100万的线程。\n>ForkJoinPool 默认的大小等于当前机器的 CPU 核心数。\n>可以使用 ```-Djava.util.concurrent.ForkJoinPool.common.parallelism=N ``` 来设置 ForkJoinPool 的大小。\n>\n>**程序中的 ParallelStream 共用一个 commonForkJoinPool**。\n\n\n# ParallelStream 的坑\n\n**ParallelStream**固然有它强大的地方，但同样的，它也存在着陷阱。\n\n```java\n public Object query(List<Request> reqs) {\n     Optional<String> result = reqs.stream().parallel().map( -> {\n      return client.url(url).get();\n      }).findAny();\n      return result.get();\n}\n```\n\n上面的代码用来获取第一个返回的请求，注意网络请求属于IO操作，这里面存在在被阻塞的风险，故而这段代码的设计是存在问题。\n前面提到程序中的 ```ParallelStream``` 共用一个 commonForkJoinPool，试想如果这里调用的 API 响应比较慢，那么这段代码就会影响到其他使用 ```ParallelStream``` 的地方（**阻塞**其他任务）。这样的后果往往是不可估量的。\n\n# 如何正确使用 ParallelStream\n\n- 首先，我们需要考虑需不需要用```ParallelStream```。\n    1.是否需要并行？  \n    2.任务之间是否是独立的？是否会引起任何竞态条件？  \n    3.结果是否取决于任务的调用顺序？ \n    考虑过这三个问题后再决定是否使用```ParallelStream```。\n\n\n- 其次，使用指定的不与其他任务冲突的 ```ForkJoinPool```。\n\n```java\nForkJoinPool forkJoinPool = new ForkJoinPool(3);  \nforkJoinPool.submit(() -> {  \n    firstRange.parallelStream().forEach((number) -> {\n        try {\n            Thread.sleep(5);\n        } catch (InterruptedException e) { }\n    });\n});\n\n```\n\n","slug":"ParallelStream-的正确打开方式","published":1,"updated":"2020-03-08T16:21:21.655Z","_id":"ck7j59qk20000olt7euh85zzp","layout":"post","photos":[],"link":"","content":"<h1 id=\"ParallelStream-是什么\"><a href=\"#ParallelStream-是什么\" class=\"headerlink\" title=\"ParallelStream 是什么\"></a>ParallelStream 是什么</h1><p><strong>ParallelStream</strong> 其实就是一个并行执行的流.它通过默认的ForkJoinPool,可能提高你的多线程任务的速度.</p>\n<h1 id=\"ParallelStream-的作用\"><a href=\"#ParallelStream-的作用\" class=\"headerlink\" title=\"ParallelStream 的作用\"></a>ParallelStream 的作用</h1><p><strong>ParallelStream</strong> 具有平行处理能力，处理的过程会分而治之，也就是将一个大任务切分成多个小任务，这表示每个任务都是一个操作。</p>\n<a id=\"more\"></a>\n\n\n<figure class=\"highlight java\"><figcaption><span>forEach()</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; numbers = Arrays.asList(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>);<br><br>numbers.parallelStream()<br>       .forEach(out::println); <br></code></pre></td></tr></table></figure> \n\n<p>上面的代码我们的到的不是顺序的1、2、3、4、5…，而是随机的顺序。</p>\n<p>如果需要按照原来的顺序便利，可以使用forEachOrdered()方法：</p>\n<figure class=\"highlight java\"><figcaption><span>forEachOrdered()</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; numbers = Arrays.asList(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>);<br><br>numbers.parallelStream()<br>       .forEachOrdered(out::println);<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"ParallelStream-的实现\"><a href=\"#ParallelStream-的实现\" class=\"headerlink\" title=\"ParallelStream 的实现\"></a>ParallelStream 的实现</h1><p>ParallelStream 是由 ForkJoin 与 ForkJoinPool 实现的。<br>ForkJoinPool 使用相对少的线程来处理大量的任务。<br>比如有一个任务需要处理100万的数据，那么这个任务会被分割成两个处理50万数据的任务，以此类推，直到任务单元被分割成一个预设的阈值大小的任务，直到这些子任务被执行完，这个任务才将完成。<br>这和ThreadPoolExecutor的区别是，ThreadPoolExecutor 处理这个100万的任务会需要100万的线程。</p>\n<blockquote>\n<p>ForkJoinPool 默认的大小等于当前机器的 CPU 核心数。<br>可以使用 <code>-Djava.util.concurrent.ForkJoinPool.common.parallelism=N</code> 来设置 ForkJoinPool 的大小。</p>\n<p><strong>程序中的 ParallelStream 共用一个 commonForkJoinPool</strong>。</p>\n</blockquote>\n<h1 id=\"ParallelStream-的坑\"><a href=\"#ParallelStream-的坑\" class=\"headerlink\" title=\"ParallelStream 的坑\"></a>ParallelStream 的坑</h1><p><strong>ParallelStream</strong>固然有它强大的地方，但同样的，它也存在着陷阱。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"> <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(List&lt;Request&gt; reqs)</span> </span>&#123;<br>     Optional&lt;String&gt; result = reqs.stream().parallel().map( -&gt; &#123;<br>      <span class=\"hljs-keyword\">return</span> client.url(url).get();<br>      &#125;).findAny();<br>      <span class=\"hljs-keyword\">return</span> result.get();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>上面的代码用来获取第一个返回的请求，注意网络请求属于IO操作，这里面存在在被阻塞的风险，故而这段代码的设计是存在问题。<br>前面提到程序中的 <code>ParallelStream</code> 共用一个 commonForkJoinPool，试想如果这里调用的 API 响应比较慢，那么这段代码就会影响到其他使用 <code>ParallelStream</code> 的地方（<strong>阻塞</strong>其他任务）。这样的后果往往是不可估量的。</p>\n<h1 id=\"如何正确使用-ParallelStream\"><a href=\"#如何正确使用-ParallelStream\" class=\"headerlink\" title=\"如何正确使用 ParallelStream\"></a>如何正确使用 ParallelStream</h1><ul>\n<li>首先，我们需要考虑需不需要用<code>ParallelStream</code>。<br>  1.是否需要并行？<br>  2.任务之间是否是独立的？是否会引起任何竞态条件？<br>  3.结果是否取决于任务的调用顺序？<br>  考虑过这三个问题后再决定是否使用<code>ParallelStream</code>。</li>\n</ul>\n<ul>\n<li>其次，使用指定的不与其他任务冲突的 <code>ForkJoinPool</code>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">ForkJoinPool forkJoinPool = <span class=\"hljs-keyword\">new</span> ForkJoinPool(<span class=\"hljs-number\">3</span>);  <br>forkJoinPool.submit(() -&gt; &#123;  <br>    firstRange.parallelStream().forEach((number) -&gt; &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            Thread.sleep(<span class=\"hljs-number\">5</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (InterruptedException e) &#123; &#125;<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"ParallelStream-是什么\"><a href=\"#ParallelStream-是什么\" class=\"headerlink\" title=\"ParallelStream 是什么\"></a>ParallelStream 是什么</h1><p><strong>ParallelStream</strong> 其实就是一个并行执行的流.它通过默认的ForkJoinPool,可能提高你的多线程任务的速度.</p>\n<h1 id=\"ParallelStream-的作用\"><a href=\"#ParallelStream-的作用\" class=\"headerlink\" title=\"ParallelStream 的作用\"></a>ParallelStream 的作用</h1><p><strong>ParallelStream</strong> 具有平行处理能力，处理的过程会分而治之，也就是将一个大任务切分成多个小任务，这表示每个任务都是一个操作。</p>","more":"<figure class=\"highlight java\"><figcaption><span>forEach()</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; numbers = Arrays.asList(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>);<br><br>numbers.parallelStream()<br>       .forEach(out::println); <br></code></pre></td></tr></table></figure> \n\n<p>上面的代码我们的到的不是顺序的1、2、3、4、5…，而是随机的顺序。</p>\n<p>如果需要按照原来的顺序便利，可以使用forEachOrdered()方法：</p>\n<figure class=\"highlight java\"><figcaption><span>forEachOrdered()</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; numbers = Arrays.asList(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>);<br><br>numbers.parallelStream()<br>       .forEachOrdered(out::println);<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"ParallelStream-的实现\"><a href=\"#ParallelStream-的实现\" class=\"headerlink\" title=\"ParallelStream 的实现\"></a>ParallelStream 的实现</h1><p>ParallelStream 是由 ForkJoin 与 ForkJoinPool 实现的。<br>ForkJoinPool 使用相对少的线程来处理大量的任务。<br>比如有一个任务需要处理100万的数据，那么这个任务会被分割成两个处理50万数据的任务，以此类推，直到任务单元被分割成一个预设的阈值大小的任务，直到这些子任务被执行完，这个任务才将完成。<br>这和ThreadPoolExecutor的区别是，ThreadPoolExecutor 处理这个100万的任务会需要100万的线程。</p>\n<blockquote>\n<p>ForkJoinPool 默认的大小等于当前机器的 CPU 核心数。<br>可以使用 <code>-Djava.util.concurrent.ForkJoinPool.common.parallelism=N</code> 来设置 ForkJoinPool 的大小。</p>\n<p><strong>程序中的 ParallelStream 共用一个 commonForkJoinPool</strong>。</p>\n</blockquote>\n<h1 id=\"ParallelStream-的坑\"><a href=\"#ParallelStream-的坑\" class=\"headerlink\" title=\"ParallelStream 的坑\"></a>ParallelStream 的坑</h1><p><strong>ParallelStream</strong>固然有它强大的地方，但同样的，它也存在着陷阱。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"> <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(List&lt;Request&gt; reqs)</span> </span>&#123;<br>     Optional&lt;String&gt; result = reqs.stream().parallel().map( -&gt; &#123;<br>      <span class=\"hljs-keyword\">return</span> client.url(url).get();<br>      &#125;).findAny();<br>      <span class=\"hljs-keyword\">return</span> result.get();<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>上面的代码用来获取第一个返回的请求，注意网络请求属于IO操作，这里面存在在被阻塞的风险，故而这段代码的设计是存在问题。<br>前面提到程序中的 <code>ParallelStream</code> 共用一个 commonForkJoinPool，试想如果这里调用的 API 响应比较慢，那么这段代码就会影响到其他使用 <code>ParallelStream</code> 的地方（<strong>阻塞</strong>其他任务）。这样的后果往往是不可估量的。</p>\n<h1 id=\"如何正确使用-ParallelStream\"><a href=\"#如何正确使用-ParallelStream\" class=\"headerlink\" title=\"如何正确使用 ParallelStream\"></a>如何正确使用 ParallelStream</h1><ul>\n<li>首先，我们需要考虑需不需要用<code>ParallelStream</code>。<br>  1.是否需要并行？<br>  2.任务之间是否是独立的？是否会引起任何竞态条件？<br>  3.结果是否取决于任务的调用顺序？<br>  考虑过这三个问题后再决定是否使用<code>ParallelStream</code>。</li>\n</ul>\n<ul>\n<li>其次，使用指定的不与其他任务冲突的 <code>ForkJoinPool</code>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">ForkJoinPool forkJoinPool = <span class=\"hljs-keyword\">new</span> ForkJoinPool(<span class=\"hljs-number\">3</span>);  <br>forkJoinPool.submit(() -&gt; &#123;  <br>    firstRange.parallelStream().forEach((number) -&gt; &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            Thread.sleep(<span class=\"hljs-number\">5</span>);<br>        &#125; <span class=\"hljs-keyword\">catch</span> (InterruptedException e) &#123; &#125;<br>    &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck7ggk7i50000c5t7h9qyd99a","category_id":"ck7ge5to80005oit73jwx97jk","_id":"ck7ggk7i70003c5t7f2zdd7i7"},{"post_id":"ck7ggk7i50000c5t7h9qyd99a","category_id":"ck7gfrsph0002upt72cug1e9q","_id":"ck7ggk7i70004c5t7abphcbhe"},{"post_id":"ck7j59qk20000olt7euh85zzp","category_id":"ck7ge5to80005oit73jwx97jk","_id":"ck7j59qkf0004olt7bpnje6cj"},{"post_id":"ck7j59qk20000olt7euh85zzp","category_id":"ck7j59qkd0002olt7e3uwhy1x","_id":"ck7j59qkg0006olt7csoq1p8j"}],"PostTag":[{"post_id":"ck7ggk7i50000c5t7h9qyd99a","tag_id":"ck7ge5nmm0002oit78n5s9mgk","_id":"ck7ggk7i70001c5t76v9x3g81"},{"post_id":"ck7ggk7i50000c5t7h9qyd99a","tag_id":"ck7gfr3bp0000upt7cplk04fu","_id":"ck7ggk7i70002c5t7a1aqcl6n"},{"post_id":"ck7j59qk20000olt7euh85zzp","tag_id":"ck7j59qk90001olt7gwqefwln","_id":"ck7j59qkg0005olt705804ma4"},{"post_id":"ck7j59qk20000olt7euh85zzp","tag_id":"ck7j59qkf0003olt7b6tfe8a3","_id":"ck7j59qkg0007olt728v8gqhx"}],"Tag":[{"name":"Coding","_id":"ck7ge5nmm0002oit78n5s9mgk"},{"name":"Defensive Programming","_id":"ck7gfr3bp0000upt7cplk04fu"},{"name":"Java","_id":"ck7j59qk90001olt7gwqefwln"},{"name":"Stream","_id":"ck7j59qkf0003olt7b6tfe8a3"}]}}